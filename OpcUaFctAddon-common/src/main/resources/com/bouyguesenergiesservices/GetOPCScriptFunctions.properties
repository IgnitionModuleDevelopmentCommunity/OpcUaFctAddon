readValues.desc=This function is equivalent to the system.opc.readValue function, except that it can operate in bulk. You can specify a list of multiple addresses to read from, and you will receive a list of the same length, where each entry is the qualified value object for the corresponding address.
readValues.param.opcServer=String - Serveur OPC declare sur la gateway.
readValues.param.lstItemPath=String[] - A list of strings, each representing an item path, or address to read from.
readValues.returns=QualifiedValue[] - A sequence of objects, one for each address specified, in order. Each object will contains the value, quality, and timestamp returned from the OPC server

isSubscribe.desc=Search in  OPC subscription list if  this subscription is still active
isSubscribe.param.subscriptionName=String - Name of the subscription declare (return by subscribe function)
isSubscribe.returns=Boolean - False if the subscription is unknown

subscribe.desc=Subscribe a list of Item Path or address to read from to the OPC Server connection declare on the gateway. There is a timeout (30s) to the subscription if the function 'readSubscribeValues' isn't use
subscribe.param.opcServer =String - The name of the OPC server connection in which the items reside.
subscribe.param.lstItemPath=String[] - A list of strings, each representing an item path, or address to read from.
subscribe.param.rate=Int - Rate of the subscription (ms).
subscribe.returns=String - Name of the subscription declare (use this return as parameter of readSubscribeValues function). None if fail

readSubscribeValues.desc=Get all Item Path last value of the subscription, if there is any change since the previous call.
readSubscribeValues.param.subscriptionName=String - Name of the subscription declare (return by subscribe function)
readSubscribeValues.returns=QualifiedValue[] - A sequence of objects, one for each address specified, in order. Each object will contains the value, quality, and timestamp returned from the OPC server subscription for the corresponding address.(None - if the subscription doesn't exist or in Timeout else there is no value change )

unsubscribe.desc=Close the OPC subscription
unsubscribe.param.subscriptionName=String - Name of the subscription declare (return by subscribe function)
unsubscribe.returns=Boolean - False if the subscription is unknown

unsubscribeAll.desc=Close all OPC subscription open before
